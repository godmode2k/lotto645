#ifndef __PREDICTS_METHOD__
#define __PREDICTS_METHOD__

#define LAST_GAME   "1 ~ 1141회\n(2024.10.12 추첨까지)"
const char* last_game = "no.1141"; // range: no.1 ~ present
int result_won[] = { 7, 11, 12, 21, 26, 35, 20 };


float digits_mid_code[5][3] = {
    // [0]  1, 1502, 1.3868882733148662
    // [1] 10, 1739, 1.605724838411819
    // [2] 20, 1624, 1.4995383194829177
    // [3] 30, 1711, 1.579870729455217
    // [4] 40, 1005, 0.9279778393351801

    // [digits] [sum] [1] [10] [20] [30] [40]

    { 1, 1580, 1.3847502191060472f, },
    { 10, 1835, 1.6082383873794917f, },
    { 20, 1705, 1.4943032427695004f, },
    { 30, 1808, 1.5845749342681859f, },
    { 40, 1059, 0.9281332164767747f, },
};

float odd_even_code[45][9] = {
    // [ 0][0] 43   0.00  0.00  0.00  2.00 30.00 118.00     35 185.00
    // [ 1][0] 34   0.00  3.00 11.00 43.00 75.00  32.00     21 185.00
    // ...
    // [44][0] 9   39.00 54.00 18.00  4.00  1.00   0.00     24 140.00

    // 1 ~ 45, appear counts
    // [N] [1] [2] [3] [4] [5] [6] [bonus] [sum]

    { 34, 0.0f, 3.0f, 13.0f, 43.0f, 81.0f, 36.0f, 23.0f, 199.0f, },
    { 33, 0.0f, 4.0f, 16.0f, 55.0f, 63.0f, 26.0f, 30.0f, 194.0f, },
    { 12, 40.0f, 68.0f, 44.0f, 13.0f, 2.0f, 0.0f, 27.0f, 194.0f, },
    { 43, 0.0f, 0.0f, 0.0f, 2.0f, 31.0f, 124.0f, 35.0f, 192.0f, },
    { 13, 33.0f, 52.0f, 63.0f, 15.0f, 2.0f, 0.0f, 26.0f, 191.0f, },
    { 1, 158.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 32.0f, 190.0f, },
    { 27, 1.0f, 16.0f, 36.0f, 55.0f, 42.0f, 10.0f, 29.0f, 189.0f, },
    { 17, 19.0f, 46.0f, 53.0f, 32.0f, 9.0f, 0.0f, 30.0f, 189.0f, },
    { 20, 5.0f, 34.0f, 63.0f, 36.0f, 17.0f, 4.0f, 27.0f, 186.0f, },
    { 14, 33.0f, 58.0f, 47.0f, 26.0f, 1.0f, 0.0f, 21.0f, 186.0f, },
    { 4, 101.0f, 45.0f, 5.0f, 0.0f, 0.0f, 0.0f, 34.0f, 185.0f, },
    { 7, 73.0f, 73.0f, 10.0f, 0.0f, 0.0f, 0.0f, 28.0f, 184.0f, },
    { 40, 0.0f, 0.0f, 1.0f, 14.0f, 57.0f, 90.0f, 22.0f, 184.0f, },
    { 3, 117.0f, 35.0f, 3.0f, 0.0f, 0.0f, 0.0f, 29.0f, 184.0f, },
    { 26, 3.0f, 14.0f, 41.0f, 56.0f, 33.0f, 6.0f, 31.0f, 184.0f, },
    { 18, 7.0f, 52.0f, 60.0f, 34.0f, 11.0f, 1.0f, 19.0f, 184.0f, },
    { 38, 0.0f, 0.0f, 3.0f, 25.0f, 65.0f, 62.0f, 28.0f, 183.0f, },
    { 6, 90.0f, 46.0f, 13.0f, 3.0f, 0.0f, 0.0f, 31.0f, 183.0f, },
    { 24, 2.0f, 16.0f, 45.0f, 54.0f, 31.0f, 4.0f, 30.0f, 182.0f, },
    { 45, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 164.0f, 18.0f, 182.0f, },
    { 31, 0.0f, 4.0f, 25.0f, 60.0f, 47.0f, 18.0f, 27.0f, 181.0f, },
    { 37, 0.0f, 1.0f, 9.0f, 26.0f, 67.0f, 54.0f, 23.0f, 180.0f, },
    { 21, 9.0f, 30.0f, 46.0f, 48.0f, 21.0f, 3.0f, 22.0f, 179.0f, },
    { 35, 1.0f, 0.0f, 12.0f, 39.0f, 56.0f, 42.0f, 29.0f, 179.0f, },
    { 10, 45.0f, 72.0f, 33.0f, 1.0f, 1.0f, 0.0f, 27.0f, 179.0f, },
    { 11, 39.0f, 66.0f, 36.0f, 14.0f, 0.0f, 0.0f, 24.0f, 179.0f, },
    { 16, 23.0f, 44.0f, 49.0f, 32.0f, 4.0f, 0.0f, 27.0f, 179.0f, },
    { 15, 15.0f, 54.0f, 55.0f, 25.0f, 3.0f, 0.0f, 25.0f, 177.0f, },
    { 19, 12.0f, 33.0f, 63.0f, 34.0f, 12.0f, 3.0f, 20.0f, 177.0f, },
    { 44, 0.0f, 0.0f, 0.0f, 0.0f, 12.0f, 141.0f, 24.0f, 177.0f, },
    { 39, 0.0f, 0.0f, 2.0f, 14.0f, 71.0f, 66.0f, 24.0f, 177.0f, },
    { 30, 0.0f, 7.0f, 34.0f, 56.0f, 35.0f, 13.0f, 31.0f, 176.0f, },
    { 2, 122.0f, 22.0f, 0.0f, 0.0f, 0.0f, 0.0f, 32.0f, 176.0f, },
    { 36, 0.0f, 2.0f, 7.0f, 32.0f, 60.0f, 50.0f, 24.0f, 175.0f, },
    { 42, 0.0f, 0.0f, 0.0f, 4.0f, 48.0f, 93.0f, 23.0f, 168.0f, },
    { 5, 90.0f, 48.0f, 5.0f, 1.0f, 0.0f, 0.0f, 23.0f, 167.0f, },
    { 8, 54.0f, 67.0f, 19.0f, 3.0f, 0.0f, 0.0f, 23.0f, 166.0f, },
    { 32, 0.0f, 3.0f, 13.0f, 50.0f, 46.0f, 21.0f, 31.0f, 164.0f, },
    { 28, 0.0f, 4.0f, 38.0f, 41.0f, 45.0f, 12.0f, 22.0f, 162.0f, },
    { 25, 1.0f, 17.0f, 39.0f, 50.0f, 27.0f, 6.0f, 18.0f, 158.0f, },
    { 29, 1.0f, 5.0f, 34.0f, 46.0f, 48.0f, 9.0f, 15.0f, 158.0f, },
    { 41, 0.0f, 0.0f, 0.0f, 10.0f, 53.0f, 76.0f, 17.0f, 156.0f, },
    { 23, 3.0f, 23.0f, 38.0f, 49.0f, 19.0f, 4.0f, 20.0f, 156.0f, },
    { 22, 5.0f, 21.0f, 47.0f, 39.0f, 20.0f, 3.0f, 16.0f, 151.0f, },
    { 9, 39.0f, 56.0f, 21.0f, 4.0f, 1.0f, 0.0f, 24.0f, 145.0f, },
};

#endif // __PREDICTS_METHOD__
