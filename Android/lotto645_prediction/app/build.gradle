apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.atflab.android.lottery_prediction"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //! DO NOT USE (no longer supported): armeabi
            //abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            //abiFilters 'x86'
        }
        /*
        //! DO NOT USE CMake
        externalNativeBuild {
            cmake {
                // cppFlags: -std=c++11 or -std=gnu++11
                //cppFlags ''
                cppFlags "-std=c++11"
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        */
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    /*
    //! DO NOT USE CMake
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
    */
}


///*
// ----------------------------------
// NDK
// ----------------------------------
// Windows
//sourceSets.main.jni.srcDirs = []
android {
    sourceSets {
        main {
            //jni.srcDirs = []
            jniLibs.srcDirs = ["src\\main\\jniLibs"]
        }
    }
}
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    //def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()
    def ndkDir = project.android.ndkDirectory.absolutePath
    commandLine "$ndkDir\\ndk-build.cmd",
            'NDK_PROJECT_PATH=build\\intermediates\\ndk',
            'NDK_LIBS_OUT=src\\main\\jniLibs',
            'APP_BUILD_SCRIPT=src\\main\\cpp\\Android.mk',
            'NDK_APPLICATION_MK=src\\main\\cpp\\Application.mk'
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}
/*
// Linux
//sourceSets.main.jni.srcDirs = []
android {
    sourceSets {
        main {
            //jni.srcDirs = []
            jniLibs.srcDirs = ["src/main/jniLibs"]
        }
    }
}
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    //def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()

    // No such property: sdkHandler for class: com.android.build.gradle.AppPlugin
    def ndkDir = project.android.ndkDirectory
    commandLine "$ndkDir/ndk-build",
            'NDK_PROJECT_PATH=build/intermediates/ndk',
            'NDK_LIBS_OUT=src/main/jniLibs',
            'APP_BUILD_SCRIPT=src/main/cpp/Android.mk',
            'NDK_APPLICATION_MK=src/main/cpp/Application.mk'
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}
*/
// ----------------------------------



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.0.0'
    implementation 'androidx.navigation:navigation-ui:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
